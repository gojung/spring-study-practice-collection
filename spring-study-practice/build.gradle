plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}


/*disable 해놓으면 하위 프로젝트의 task를 찾지 못한다 왜..?*/
bootJar { enabled = false }

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'
    apply plugin: 'org.asciidoctor.jvm.convert'

    group = 'com.gojung'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'

    configurations {
        asciidoctorExtensions
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    ext {
        snippetsDir = file('build/generated-snippets')
    }


    dependencies {
        /*boot*/
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web:2.5.5'

        /*lombok*/
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        /* Rest Docs */
        asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

        /*h2*/
        runtimeOnly 'com.h2database:h2'

        /*test*/
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    jacoco {
        toolVersion = '0.8.7'
    }

    jacocoTestReport {
        reports {
            html.enabled true
            csv.enabled true
        }

        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, exclude: [
                        "com/gojung/*",
                ])
            }))
        }
        finalizedBy 'jacocoTestCoverageVerification'
    }

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                enabled = true
                element = 'METHOD'
                limit {
                    counter = 'METHOD'
                    value = 'COVEREDRATIO'
                    minimum = 0.00
                }
                limit {
                    counter = 'BRANCH'
                    value = 'COVEREDRATIO'
                    minimum = 0.00
                }
                excludes = [
                        'com.gojung.*',
                ]
            }
        }
    }

    task testCoverage(type: Test) {
        group 'verification'
        description 'if test completed, run testCoverage'

        dependsOn(':test',
                ':jacocoTestReport',
                ':jacocoTestCoverageVerification')

        tasks['jacocoTestReport'].mustRunAfter(tasks['test'])
        tasks['jacocoTestCoverageVerification'].mustRunAfter(tasks['jacocoTestReport'])
    }

    test {
        outputs.dir snippetsDir
        useJUnitPlatform()
        testLogging {
            events "failed"
            exceptionFormat "full"
        }
        finalizedBy 'jacocoTestReport'
    }

    asciidoctor {
        dependsOn test
        configurations 'asciidoctorExtensions'
        inputs.dir snippetsDir

        sources {
            include("**/index.adoc", "**/common/*.adoc")
        }

        baseDirFollowsSourceFile()
    }

    asciidoctor.doFirst {
        delete file('src/main/resources/static/docs')
    }

    task copyDocument(type: Copy) {
        dependsOn asciidoctor
        from file("build/docs/asciidoc")
        into file("src/main/resources/static/docs")
    }
    build {
        dependsOn copyDocument
    }

}

project(':s3-uploder') {
    dependencies {
    }
}

project(':member-service') {
    bootJar { enabled = true }
    dependencies {
        /* JPA */
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'

        /*validation*/
        implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.5'
    }
}

project(':design-pattern') {
    dependencies {
    }
}

project(':jpashop') {
    dependencies {
        /* JPA */
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'

        /*validation*/
        implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.5'
    }
}
